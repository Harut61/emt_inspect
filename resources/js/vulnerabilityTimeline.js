$(document).ready(function () {
    configChart({
        chartName: "Net",
        chartTitle: "Net Vulnerabilities",
        VIN: totalVIN,
        VOUT: totalVOUT,
        Net: totalNet
    });
    configChart({
        chartName: "NonMicrosoft",
        chartTitle: "Non Microsoft Vulnerability Timeline",
        VIN: nonMicrosoftVIN,
        VOUT: nonMicrosoftVOUT,
        Net: nonMicrosoftNet
    });
    configChart({
        chartName: "Microsoft",
        chartTitle: "Microsoft Vulnerability Timeline",
        VIN: microsoftVIN,
        VOUT: microsoftVOUT,
        Net: microsoftNet
    });
});

function configChart(config) {
    //Get only unique and sorted dates for chart
    let dates = _.uniq([...Object.keys(config.VIN), ...Object.keys(config.VOUT), ...Object.keys(config.Net)].sort());
    dates.splice(5, 1);

    let VINCount = createAxisArray(dates, config.VIN);
    let VOUTCount = createAxisArray(dates, config.VOUT);
    let NetCount = createAxisArray(dates, config.Net);

    Highcharts.chart(config.chartName, {

        chart: {
            type: 'line'
        },
        title: {
            text: config.chartTitle
        },
        subtitle: {
            text: ''
        },
        yAxis: {
            title: {
                text: 'Vulnerability Count'
            },
            allowDecimals: false
        },
        xAxis: {
            categories: dates
        },
        plotOptions: {
            series: {
                cursor: 'pointer',
                label: {
                    connectorAllowed: false
                },
                pointStart: 0,
                point: {
                    events: {
                        click: function () {
                            if (this.options.y === 0) return false;

                            location.href = location.href = `${location.origin}/detailed-vulnerabilities/${this.options.date}/${this.options.type}`;
                        }
                    }
                }
            }
        },
        series: [{
            name: 'VIN',
            data: VINCount
        }, {
            name: 'VOUT',
            data: VOUTCount
        }, {
            name: 'Net Vulnerabilities',
            data: NetCount
        }],
        responsive: {
            rules: [{
                condition: {
                    maxWidth: 500
                },
                chartOptions: {
                    legend: {
                        layout: 'horizontal',
                        align: 'center',
                        verticalAlign: 'bottom'
                    }
                }
            }]
        }

    });
}

function createAxisArray(dates, vuneraabilities) {
    axisArray = [];

    dates.forEach(date => {
        if (vuneraabilities.hasOwnProperty(date)) {
            axisArray.push({
                y: _.size(vuneraabilities[date]),
                date: date,
                type: vuneraabilities.type
            });
        } else {
            axisArray.push({
                y: 0
            });
        }
    });

    return axisArray;
}
